{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./browser/index.js","webpack:///./assemblyscript/lib/loader/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","loader","console","log","myImport","env","memory","WebAssembly","Memory","initial","abort","Error","Date","preInstantiate","fetch","then","response","arrayBuffer","buffer","instantiate","myModule","postInstantiate","instance","Float64Array","add","minus","p0","hello","__getString","ptr","__allocString","p1","hi","arr","p2","__retain","__allocArray","INT32ARRAY_ID","p3","bubbleSort","length","__getInt32Array","dateNow","random","a0","window","performance","now","fib","a1","j0","j1","catch","err","alert","message","stack","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","U32","Uint32Array","U16","Uint16Array","offset","String","fromCharCode","apply","subarray","parts","last","size","push","join","imports","baseModule","getString","mesg","file","line","colm","trace","Array","slice","arguments","Math","rawExports","table","alloc","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","align","buf","getTypedArrayImpl","Type","bufPtr","str","charCodeAt","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","__getUint8Array","__getUint8ClampedArray","Uint8ClampedArray","__getInt16Array","__getUint16Array","__getUint32Array","__getInt64Array","__getUint64Array","__getFloat32Array","__getFloat64Array","__instanceof","baseId","demangle","wrapFunction","fn","setargc","wrap","args","original","isResponse","Response","async","source","instantiateStreaming","Module","compile","elem","prop","internalName","split","curr","part","shift","hash","indexOf","className","substring","classElem","ctor","constructor","valueOf","this","thisValue","writable","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","test","replace","setter","instantiateSync","Instance"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\n\nconst loader = require(\"../assemblyscript/lib/loader\");\nconsole.log(loader);\n\nlet myImport = {\n  env: {\n    memory: new WebAssembly.Memory({\n      initial: 1\n    }),\n    abort: function () {\n      throw Error(\"abort called\");\n    }\n  },\n  Date: Date\n}\nloader.preInstantiate(myImport);\n\n\nfetch(\"../build/optimized.wasm\")\n  .then(response => response.arrayBuffer())\n  .then(buffer => WebAssembly.instantiate(buffer, myImport))\n  .then(module => {\n    var myModule = loader.postInstantiate(myImport, module.instance); //改造 assemblyscript default loader 支持浏览器环境\n    var exports = module.instance.exports;\n    var mem = new Float64Array(exports.memory.buffer);\n\n    console.log(module);\n    console.log(exports);\n    console.log(myModule);\n\n    //简单运算\n    console.log('---');\n    console.log(exports.add(1, 2));\n    console.log(exports.minus(2, 1));\n\n    //字符串读取和传参\n    console.log('---');\n    let p0 = exports.hello();\n    console.log(p0);\n    console.log(myModule.__getString(p0));\n\n    let name = 'tencent';\n    let ptr = myModule.__allocString(name)\n    let p1 = exports.hi(ptr);\n    console.log(p1);\n    console.log(myModule.__getString(p1));\n\n    //数组读取和传参数\n    console.log('---');\n    let arr = [7, 2, 4, 3, 9];\n    let p2 = myModule.__retain(myModule.__allocArray(myModule.INT32ARRAY_ID, arr));\n    let p3 = exports.bubbleSort(p2, arr.length);\n    console.log(myModule.__getInt32Array(p3));\n\n    /**\n     * Date 对象目前需要先从外部导入\n     */\n    console.log('---');\n    console.log(exports.dateNow());\n\n    // Math 对象使用\n    console.log('---');\n    console.log(exports.random());\n\n    /**\n     * 计算斐波那契数列时间消耗对比\n     * assemblyscript 1600\n     * javascript 2600\n     * emscripten 1000\n     */\n    console.log('---');\n    let a0 = window.performance.now();\n    exports.fib(42)\n    let a1 = window.performance.now();\n    console.log('assemblyscript ' + (a1 - a0) + ' ms');\n\n    let j0 = window.performance.now();\n    fib(42)\n    let j1 = window.performance.now();\n    console.log('javascript ' + (j1 - j0) + ' ms');\n\n  }).catch(err => {\n    alert(\"Failed to load WASM: \" + err.message + \" (ad blocker, maybe?)\");\n    console.log(err.stack);\n  });","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\nexports.preInstantiate = preInstantiate;\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2:\n          return new Float32Array(buffer);\n        case 3:\n          return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0:\n          return new(signed ? Int8Array : Uint8Array)(buffer);\n        case 1:\n          return new(signed ? Int16Array : Uint16Array)(buffer);\n        case 2:\n          return new(signed ? Int32Array : Uint32Array)(buffer);\n        case 3:\n          return new(signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a view on the values of an array in the module's memory. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY ?\n      U32[arr + ARRAY_LENGTH_OFFSET >>> 2] :\n      U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n      .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Reads (copies) the values of an array from the module's memory. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\n  }\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do\n        if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nexports.postInstantiate = postInstantiate;\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  wrap.original = fn;\n  return wrap;\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module ?\n      source :\n      await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module ?\n      source :\n      new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source) ?\n      source.arrayBuffer() :\n      source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports[\"__setargc\"] || function () {};\n\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function (...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function (thisValue) {\n          return Object.create(ctor.prototype, {\n            [THIS]: {\n              value: thisValue,\n              writable: false\n            }\n          });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function () {\n              return getter(this[THIS]);\n            },\n            set: function (value) {\n              setter(this[THIS], value);\n            },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[THIS], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;"],"sourceRoot":""}