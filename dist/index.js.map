{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assemblyscript/lib/loader/index.js","webpack:///./browser/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","buffer","ptr","U32","Uint32Array","U16","Uint16Array","length","offset","String","fromCharCode","apply","subarray","parts","last","size","push","join","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","file","line","colm","Error","trace","console","log","Array","slice","arguments","Math","Date","postInstantiate","instance","rawExports","table","alloc","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","arr","align","buf","getTypedArrayImpl","Type","bufPtr","__allocString","str","charCodeAt","__getString","__allocArray","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","__getUint8Array","__getUint8ClampedArray","Uint8ClampedArray","__getInt16Array","__getUint16Array","__getInt32Array","__getUint32Array","__getInt64Array","__getUint64Array","__getFloat32Array","__getFloat64Array","__instanceof","baseId","demangle","wrapFunction","fn","setargc","wrap","args","original","isResponse","Response","async","instantiate","source","instantiateStreaming","WebAssembly","Module","compile","arrayBuffer","elem","prop","internalName","split","curr","part","shift","hash","indexOf","className","substring","classElem","ctor","constructor","valueOf","this","thisValue","writable","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","test","replace","setter","instantiateSync","Instance","loader","myImport","Memory","initial","fetch","then","response","myModule","add","minus","forLoop","i32Tof32","p0","hello","p1","hi","p2","INT32ARRAY_ID","p3","bubbleSort","p4","sliceArray","dateNow","random","a0","window","performance","now","fib","a1","j0","j1","catch","err","alert","message","stack"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\nexports.preInstantiate = preInstantiate;\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2:\n          return new Float32Array(buffer);\n        case 3:\n          return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0:\n          return new(signed ? Int8Array : Uint8Array)(buffer);\n        case 1:\n          return new(signed ? Int16Array : Uint16Array)(buffer);\n        case 2:\n          return new(signed ? Int32Array : Uint32Array)(buffer);\n        case 3:\n          return new(signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a view on the values of an array in the module's memory. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY ?\n      U32[arr + ARRAY_LENGTH_OFFSET >>> 2] :\n      U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n      .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Reads (copies) the values of an array from the module's memory. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\n  }\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do\n        if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nexports.postInstantiate = postInstantiate;\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  wrap.original = fn;\n  return wrap;\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module ?\n      source :\n      await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module ?\n      source :\n      new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source) ?\n      source.arrayBuffer() :\n      source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports[\"__setargc\"] || function () {};\n\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function (...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function (thisValue) {\n          return Object.create(ctor.prototype, {\n            [THIS]: {\n              value: thisValue,\n              writable: false\n            }\n          });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function () {\n              return getter(this[THIS]);\n            },\n            set: function (value) {\n              setter(this[THIS], value);\n            },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[THIS], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;","\"use strict\";\n\nconst loader = require(\"../assemblyscript/lib/loader\");\nconsole.log(loader);\n\nlet myImport = {\n  env: {\n    memory: new WebAssembly.Memory({\n      initial: 256\n    }),\n    abort: function () {\n      throw Error(\"abort called\");\n    }\n  },\n  Date: Date\n}\nloader.preInstantiate(myImport);\n\n//计算斐波那契数列\nfunction fib(n) {\n  if (n < 2) {\n    return 1\n  }\n  return fib(n - 2) + fib(n - 1)\n}\n\nfetch(\"../build/optimized.wasm\")\n  .then(response => response.arrayBuffer())\n  .then(buffer => WebAssembly.instantiate(buffer, myImport))\n  .then(module => {\n    let myModule = loader.postInstantiate(myImport, module.instance); //改造 assemblyscript default loader 支持浏览器环境\n    let exports = module.instance.exports;\n\n    console.log(module);\n    console.log(exports);\n    console.log(myModule);\n\n    //简单运算\n    console.log('---');\n    console.log(exports.add(1, 2));\n    console.log(exports.minus(2, 1));\n\n    //for循环\n    console.log('---');\n    console.log(exports.forLoop(5));\n\n    //类型转换\n    console.log('---');\n    console.log(exports.i32Tof32(255));\n\n    //字符串读取和传参\n    console.log('---');\n    let p0 = exports.hello();\n    console.log(myModule.__getString(p0));\n\n    let name = 'tencent';\n    let ptr = myModule.__allocString(name)\n    let p1 = exports.hi(ptr); //进行数组操作之前需要执行该方法，进行一次内存数据变换，否则会报错；暂时不清楚具体原因。\n    console.log(myModule.__getString(p1));\n\n    //数组读取和传参数\n    console.log('---');\n    let arr = [7, 2, 4, 3, 9];\n    let p2 = myModule.__allocArray(myModule.INT32ARRAY_ID, arr);\n    let p3 = exports.bubbleSort(p2, arr.length);\n    console.log(myModule.__getInt32Array(p3));\n\n    //截取数组\n    let p4 = exports.sliceArray(p2, 0, 2);\n    console.log(myModule.__getInt32Array(p4));\n\n    /**\n     * Date 对象目前需要先从外部导入\n     */\n    console.log('---');\n    console.log(exports.dateNow());\n\n    // Math 对象使用\n    console.log('---');\n    console.log(exports.random());\n\n    /**\n     * 计算斐波那契数列时间消耗对比\n     * assemblyscript 1600\n     * javascript 2600\n     * emscripten 1000\n     */\n    console.log('---');\n    let a0 = window.performance.now();\n    exports.fib(42)\n    let a1 = window.performance.now();\n    console.log('assemblyscript ' + (a1 - a0) + ' ms');\n\n    let j0 = window.performance.now();\n    fib(42)\n    let j1 = window.performance.now();\n    console.log('javascript ' + (j1 - j0) + ' ms');\n\n  }).catch(err => {\n    alert(\"Failed to load WASM: \" + err.message + \" (ad blocker, maybe?)\");\n    console.log(err.stack);\n  });"],"sourceRoot":""}